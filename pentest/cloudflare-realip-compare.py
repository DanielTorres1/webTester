#!/usr/bin/python3
import requests
import warnings
from urllib3.exceptions import InsecureRequestWarning
from time import time
import argparse

# Suppress the InsecureRequestWarning
warnings.filterwarnings("ignore", category=InsecureRequestWarning)

def compare_responses(subdomain, ip_address):
    
    ports = [443,8443]
    for port in ports:
        # Request 1: GET https://186.121.246.108/ with host header set to banca.cacef.coop
        try:
            response1 = requests.get(f"https://{ip_address}:{port}/", headers={"Host": subdomain}, timeout=10, verify=False)
        except requests.exceptions.RequestException as e:
            pass


        # Request 2: GET https://banca.cacef.coop/

        headers = {
        "Host": f"{subdomain}",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/124.0",
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8",
        "Accept-Language": "en-US,en;q=0.5",
        "Accept-Encoding": "gzip, deflate, br",
        "Upgrade-Insecure-Requests": "1",
        "Sec-Fetch-Dest": "document",
        "Sec-Fetch-Mode": "navigate",
        "Sec-Fetch-Site": "none",
        "Sec-Fetch-User": "?1",
        "Te": "trailers",
        "Connection": "close"
        }

        try:
            response2 = requests.get(f"https://{subdomain}:{port}/",headers=headers, timeout=10, verify=False)
        except requests.exceptions.RequestException as e:
            pass



        # with open("output2.txt", "w") as file:
        #     file.write(str(response2.text))

        # Compare response bodies
        try:
            if response1.text == response2.text:
                print("OK")
                return True
        except:
            pass

    print("Responses are not equal")
    return False

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Compare responses from a subdomain and IP address.")
    parser.add_argument("--subdomain", required=True, help="Subdomain to test")
    parser.add_argument("--ip", required=True, help="IP address to test")
    args = parser.parse_args()

    compare_responses(args.subdomain, args.ip )